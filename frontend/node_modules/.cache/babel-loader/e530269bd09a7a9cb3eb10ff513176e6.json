{"ast":null,"code":"var _jsxFileName = \"/Users/theaglen/Book-Node-Project-/frontend/src/context/AuthContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport jwtDecode from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport default AuthContext;\n\nfunction setUserObject(user) {\n  if (!user) {\n    return null;\n  }\n\n  return {\n    username: user.username,\n    id: user.id,\n    first_name: user.first_name\n  };\n}\n\nexport const AuthProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const BASE_URL = \"http://127.0.0.1:5000/api/auth\";\n  const userToken = JSON.parse(localStorage.getItem(\"token\"));\n  const decodedUser = userToken ? jwtDecode(userToken) : null;\n  const [token, setToken] = useState(userToken);\n  const [user, setUser] = useState(setUserObject(decodedUser));\n  const [isServerError, setIsServerError] = useState(false);\n  const navigate = useNavigate();\n\n  const registerUser = async registerData => {\n    try {\n      let finalData = {\n        username: registerData.username,\n        password: registerData.password,\n        email: registerData.email,\n        first_name: registerData.firstName,\n        last_name: registerData.lastName\n      };\n      let response = await axios.post(`${BASE_URL}/register`, finalData);\n\n      if (response.status === 201) {\n        console.log(\"Successful registration! Log in to access token\");\n        setIsServerError(false);\n        navigate(\"/login\");\n      } else {\n        navigate(\"/register\");\n      }\n    } catch (error) {\n      console.log(error.response.data);\n    }\n  };\n\n  const loginUser = async loginData => {\n    try {\n      let response = await axios.post(`${BASE_URL}/login`, loginData);\n\n      if (response.status === 200) {\n        localStorage.setItem(\"token\", JSON.stringify(response.data.access));\n        setToken(JSON.parse(localStorage.getItem(\"token\")));\n        let loggedInUser = jwtDecode(response.data.access);\n        setUser(setUserObject(loggedInUser));\n        setIsServerError(false);\n        navigate(\"/\");\n      } else {\n        navigate(\"/register\");\n      }\n    } catch (error) {\n      console.log(error.response.data);\n      setIsServerError(true);\n      navigate(\"/register\");\n    }\n  };\n\n  const logoutUser = () => {\n    if (user) {\n      localStorage.removeItem(\"token\");\n      setUser(null);\n      setToken(null);\n      navigate(\"/\");\n    }\n  };\n\n  const contextData = {\n    user,\n    token,\n    loginUser,\n    logoutUser,\n    registerUser,\n    isServerError\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthProvider, \"lQHK4h+j5z+aJDaBw2Gdg10e2dI=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/Users/theaglen/Book-Node-Project-/frontend/src/context/AuthContext.js"],"names":["createContext","useState","useNavigate","axios","jwtDecode","AuthContext","setUserObject","user","username","id","first_name","AuthProvider","children","BASE_URL","userToken","JSON","parse","localStorage","getItem","decodedUser","token","setToken","setUser","isServerError","setIsServerError","navigate","registerUser","registerData","finalData","password","email","firstName","last_name","lastName","response","post","status","console","log","error","data","loginUser","loginData","setItem","stringify","access","loggedInUser","logoutUser","removeItem","contextData"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,WAAW,gBAAGL,aAAa,EAAjC;AAEA,eAAeK,WAAf;;AAEA,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AAC3B,MAAI,CAACA,IAAL,EAAW;AACT,WAAO,IAAP;AACD;;AACD,SAAO;AACLC,IAAAA,QAAQ,EAAED,IAAI,CAACC,QADV;AAELC,IAAAA,EAAE,EAAEF,IAAI,CAACE,EAFJ;AAGLC,IAAAA,UAAU,EAAEH,IAAI,CAACG;AAHZ,GAAP;AAKD;;AAED,OAAO,MAAMC,YAAY,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC5C,QAAMC,QAAQ,GAAG,gCAAjB;AACA,QAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAlB;AACA,QAAMC,WAAW,GAAGL,SAAS,GAAGV,SAAS,CAACU,SAAD,CAAZ,GAA0B,IAAvD;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAACa,SAAD,CAAlC;AACA,QAAM,CAACP,IAAD,EAAOe,OAAP,IAAkBrB,QAAQ,CAACK,aAAa,CAACa,WAAD,CAAd,CAAhC;AACA,QAAM,CAACI,aAAD,EAAgBC,gBAAhB,IAAoCvB,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAMwB,QAAQ,GAAGvB,WAAW,EAA5B;;AAEA,QAAMwB,YAAY,GAAG,MAAOC,YAAP,IAAwB;AAC3C,QAAI;AACF,UAAIC,SAAS,GAAG;AACdpB,QAAAA,QAAQ,EAAEmB,YAAY,CAACnB,QADT;AAEdqB,QAAAA,QAAQ,EAAEF,YAAY,CAACE,QAFT;AAGdC,QAAAA,KAAK,EAAEH,YAAY,CAACG,KAHN;AAIdpB,QAAAA,UAAU,EAAEiB,YAAY,CAACI,SAJX;AAKdC,QAAAA,SAAS,EAAEL,YAAY,CAACM;AALV,OAAhB;AAOA,UAAIC,QAAQ,GAAG,MAAM/B,KAAK,CAACgC,IAAN,CAAY,GAAEtB,QAAS,WAAvB,EAAmCe,SAAnC,CAArB;;AACA,UAAIM,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B;AAC3BC,QAAAA,OAAO,CAACC,GAAR,CAAY,iDAAZ;AACAd,QAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAC,QAAAA,QAAQ,CAAC,QAAD,CAAR;AACD,OAJD,MAIO;AACLA,QAAAA,QAAQ,CAAC,WAAD,CAAR;AACD;AACF,KAhBD,CAgBE,OAAOc,KAAP,EAAc;AACdF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACL,QAAN,CAAeM,IAA3B;AACD;AACF,GApBD;;AAsBA,QAAMC,SAAS,GAAG,MAAOC,SAAP,IAAqB;AACrC,QAAI;AACF,UAAIR,QAAQ,GAAG,MAAM/B,KAAK,CAACgC,IAAN,CAAY,GAAEtB,QAAS,QAAvB,EAAgC6B,SAAhC,CAArB;;AACA,UAAIR,QAAQ,CAACE,MAAT,KAAoB,GAAxB,EAA6B;AAC3BnB,QAAAA,YAAY,CAAC0B,OAAb,CAAqB,OAArB,EAA8B5B,IAAI,CAAC6B,SAAL,CAAeV,QAAQ,CAACM,IAAT,CAAcK,MAA7B,CAA9B;AACAxB,QAAAA,QAAQ,CAACN,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAD,CAAR;AACA,YAAI4B,YAAY,GAAG1C,SAAS,CAAC8B,QAAQ,CAACM,IAAT,CAAcK,MAAf,CAA5B;AACAvB,QAAAA,OAAO,CAAChB,aAAa,CAACwC,YAAD,CAAd,CAAP;AACAtB,QAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAC,QAAAA,QAAQ,CAAC,GAAD,CAAR;AACD,OAPD,MAOO;AACLA,QAAAA,QAAQ,CAAC,WAAD,CAAR;AACD;AACF,KAZD,CAYE,OAAOc,KAAP,EAAc;AACdF,MAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACL,QAAN,CAAeM,IAA3B;AACAhB,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAC,MAAAA,QAAQ,CAAC,WAAD,CAAR;AACD;AACF,GAlBD;;AAoBA,QAAMsB,UAAU,GAAG,MAAM;AACvB,QAAIxC,IAAJ,EAAU;AACRU,MAAAA,YAAY,CAAC+B,UAAb,CAAwB,OAAxB;AACA1B,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAD,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAI,MAAAA,QAAQ,CAAC,GAAD,CAAR;AACD;AACF,GAPD;;AASA,QAAMwB,WAAW,GAAG;AAClB1C,IAAAA,IADkB;AAElBa,IAAAA,KAFkB;AAGlBqB,IAAAA,SAHkB;AAIlBM,IAAAA,UAJkB;AAKlBrB,IAAAA,YALkB;AAMlBH,IAAAA;AANkB,GAApB;AASA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE0B,WAA7B;AAAA,cAA2CrC;AAA3C;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAxEM;;GAAMD,Y;UAOMT,W;;;KAPNS,Y","sourcesContent":["import { createContext, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport default AuthContext;\r\n\r\nfunction setUserObject(user) {\r\n  if (!user) {\r\n    return null;\r\n  }\r\n  return {\r\n    username: user.username,\r\n    id: user.id,\r\n    first_name: user.first_name,\r\n  };\r\n}\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const BASE_URL = \"http://127.0.0.1:5000/api/auth\";\r\n  const userToken = JSON.parse(localStorage.getItem(\"token\"));\r\n  const decodedUser = userToken ? jwtDecode(userToken) : null;\r\n  const [token, setToken] = useState(userToken);\r\n  const [user, setUser] = useState(setUserObject(decodedUser));\r\n  const [isServerError, setIsServerError] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const registerUser = async (registerData) => {\r\n    try {\r\n      let finalData = {\r\n        username: registerData.username,\r\n        password: registerData.password,\r\n        email: registerData.email,\r\n        first_name: registerData.firstName,\r\n        last_name: registerData.lastName,\r\n      };\r\n      let response = await axios.post(`${BASE_URL}/register`, finalData);\r\n      if (response.status === 201) {\r\n        console.log(\"Successful registration! Log in to access token\");\r\n        setIsServerError(false);\r\n        navigate(\"/login\");\r\n      } else {\r\n        navigate(\"/register\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error.response.data);\r\n    }\r\n  };\r\n\r\n  const loginUser = async (loginData) => {\r\n    try {\r\n      let response = await axios.post(`${BASE_URL}/login`, loginData);\r\n      if (response.status === 200) {\r\n        localStorage.setItem(\"token\", JSON.stringify(response.data.access));\r\n        setToken(JSON.parse(localStorage.getItem(\"token\")));\r\n        let loggedInUser = jwtDecode(response.data.access);\r\n        setUser(setUserObject(loggedInUser));\r\n        setIsServerError(false);\r\n        navigate(\"/\");\r\n      } else {\r\n        navigate(\"/register\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error.response.data);\r\n      setIsServerError(true);\r\n      navigate(\"/register\");\r\n    }\r\n  };\r\n\r\n  const logoutUser = () => {\r\n    if (user) {\r\n      localStorage.removeItem(\"token\");\r\n      setUser(null);\r\n      setToken(null);\r\n      navigate(\"/\");\r\n    }\r\n  };\r\n\r\n  const contextData = {\r\n    user,\r\n    token,\r\n    loginUser,\r\n    logoutUser,\r\n    registerUser,\r\n    isServerError,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextData}>{children}</AuthContext.Provider>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}